/** @file

    Browser formset.

@copyright
  INTEL CONFIDENTIAL
  Copyright 2007 - 2016 Intel Corporation.

  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.

  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.

  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.

  This file contains a 'Sample Driver' and is licensed as such under the terms
  of your license agreement with Intel or your vendor. This file may be modified
  by the user, subject to the additional terms of the license agreement.

@par Specification Reference:

**/

#include "FormsetGuid.h"

#define FRONT_PAGE_CLASS               0x0000
#define FRONT_PAGE_SUBCLASS            0x0002

#define FRONT_PAGE_FORM_ID             0x1000

#define FRONT_PAGE_ITEM_ONE            0x0001
#define FRONT_PAGE_ITEM_TWO            0x0002
#define FRONT_PAGE_ITEM_THREE          0x0003
#define FRONT_PAGE_ITEM_FOUR           0x0004
#define FRONT_PAGE_ITEM_FIVE           0x0005

#define FRONT_PAGE_KEY_CONTINUE        0x1000
#define FRONT_PAGE_KEY_LANGUAGE        0x1234
#define FRONT_PAGE_KEY_BOOT_MANAGER    0x1064
#define FRONT_PAGE_KEY_DEVICE_MANAGER  0x8567
#define FRONT_PAGE_KEY_BOOT_MAINTAIN   0x9876
#define FRONT_PAGE_KEY_RESET           0x7654

#define LABEL_SELECT_LANGUAGE          0x1000
#define LABEL_PLATFORM_INFORMATION     0x1001
#define LABEL_TIMEOUT                  0x2000
#define LABEL_END                      0xffff

formset
  guid     = FRONT_PAGE_FORMSET_GUID,
  title    = STRING_TOKEN(STR_FRONT_PAGE_TITLE),
  help     = STRING_TOKEN(STR_NULL_STRING),
  classguid = FRONT_PAGE_FORMSET_GUID,
  class    = FRONT_PAGE_CLASS,
  subclass = FRONT_PAGE_SUBCLASS,

  form formid = FRONT_PAGE_FORM_ID,
       title  = STRING_TOKEN(STR_FRONT_PAGE_TITLE);

    banner
      title = STRING_TOKEN(STR_FRONT_PAGE_COMPUTER_MODEL),
      line  1,
      align left;

    banner
      title = STRING_TOKEN(STR_FRONT_PAGE_CPU_MODEL),
      line  2,
      align left;

    banner
      title = STRING_TOKEN(STR_FRONT_PAGE_CPU_SPEED),
      line  2,
      align right;

    banner
      title = STRING_TOKEN(STR_FRONT_PAGE_BIOS_VERSION),
      line  3,
      align left;

    banner
      title = STRING_TOKEN(STR_FRONT_PAGE_MEMORY_SIZE),
      line  3,
      align right;

//    banner
//      title = STRING_TOKEN(STR_FRONT_PAGE_BANNER_0_LEFT),
//      line  0,
//      align left;

//    banner
//      title = STRING_TOKEN(STR_FRONT_PAGE_BANNER_0_RIGHT),
//      line  0,
//      align right;

//    banner
//      title = STRING_TOKEN(STR_FRONT_PAGE_BANNER_1_LEFT),
//      line  1,
//      align left;

//    banner
//      title = STRING_TOKEN(STR_FRONT_PAGE_BANNER_1_RIGHT),
//      line  1,
//      align right;

//    banner
//      title = STRING_TOKEN(STR_FRONT_PAGE_BANNER_2_LEFT),
//      line  2,
//      align left;

//    banner
//      title = STRING_TOKEN(STR_FRONT_PAGE_BANNER_3_LEFT),
//      line  3,
//      align left;


    label LABEL_SELECT_LANGUAGE;
    //
    // This is where we will dynamically add a OneOf type op-code to select
    // Languages from the currently available choices
    //
    label LABEL_END;
    subtitle text = STRING_TOKEN(STR_EMPTY_STRING);
    
    label LABEL_PLATFORM_INFORMATION;
    //
    // This is where we will dynamically add a Action type op-code to show 
    // the platform information.
    //
    
    //
    // This is where we will dynamically add a Action type op-code to show 
    // the advanced menu.
    //
    
    //
    // This is where we will dynamically add a Action type op-code to show 
    // the intel test menu.
    //
    label LABEL_END;           

    goto FRONT_PAGE_ITEM_FOUR,
      prompt  = STRING_TOKEN(STR_TPV_MANAGER),
      help    = STRING_TOKEN(STR_TPV_MANAGER_HELP),
      flags   = INTERACTIVE,
      key     = FRONT_PAGE_KEY_DEVICE_MANAGER;

    subtitle text = STRING_TOKEN(STR_EMPTY_STRING);  
               
    goto FRONT_PAGE_ITEM_THREE,
      prompt  = STRING_TOKEN(STR_BOOT_MANAGER),
      help    = STRING_TOKEN(STR_BOOT_MANAGER_HELP),
      flags   = INTERACTIVE,
      key     = FRONT_PAGE_KEY_BOOT_MANAGER;

    goto FRONT_PAGE_ITEM_FIVE,
      prompt  = STRING_TOKEN(STR_BOOT_MAINT_MANAGER),
      help    = STRING_TOKEN(STR_BOOT_MAINT_MANAGER_HELP),
      flags   = INTERACTIVE,
      key     = FRONT_PAGE_KEY_BOOT_MAINTAIN;

    subtitle text = STRING_TOKEN(STR_EMPTY_STRING); 


    text
      help    = STRING_TOKEN(STR_CONTINUE_HELP),
      text    = STRING_TOKEN(STR_CONTINUE_PROMPT),
      text    = STRING_TOKEN(STR_NULL_STRING),
      flags   = INTERACTIVE,
      key     = FRONT_PAGE_KEY_CONTINUE;

    text
      help = STRING_TOKEN(STR_RESET_STRING_HELP),
      text = STRING_TOKEN(STR_RESET_STRING),
      text = STRING_TOKEN(STR_NULL_STRING),
      flags = INTERACTIVE,
      key = FRONT_PAGE_KEY_RESET;
  endform;

endformset;
