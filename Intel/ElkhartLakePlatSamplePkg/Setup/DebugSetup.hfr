/** @file

 @copyright
  INTEL CONFIDENTIAL
  Copyright 2016 - 2020 Intel Corporation.

  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.

  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.

  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.

  This file contains a 'Sample Driver' and is licensed as such under the terms
  of your license agreement with Intel or your vendor. This file may be modified
  by the user, subject to the additional terms of the license agreement.

@par Specification
**/

form formid = AUTO_ID(DEBUG_FORM_ID),
  title     = STRING_TOKEN(STR_DEBUG_FORM);

  SUBTITLE(STRING_TOKEN(STR_DEBUG_FORM))
  SEPARATOR

  oneof varid     = PCH_SETUP.OsDebugPort,
    prompt      = STRING_TOKEN(STR_DEBUG_PORT),
    help        = STRING_TOKEN(STR_DEBUG_PORT_HELP),
    default     = 3, defaultstore = MyStandardDefault,
    option text = STRING_TOKEN(STR_DEBUG_PORT_DISABLED), value = 0xFF, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_DEBUG_PORT_SERIALIO_UART2), value = 3, flags = RESET_REQUIRED;
  endoneof;

  oneof varid = SETUP_DATA.KernelDebugPatch,
    prompt    = STRING_TOKEN(STR_KERNEL_DEBUG_PATCH),
    help      = STRING_TOKEN(STR_KERNEL_DEBUG_PATCH_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
  endoneof;

  oneof varid = SI_SETUP.PlatformDebugConsent,
    questionid = PLATFORM_DEBUG_CONSENT_KEY,
    prompt   = STRING_TOKEN(STR_PLATFORM_DEBUG_CONSENT_STRING),
    help     = STRING_TOKEN(STR_PLATFORM_DEBUG_CONSENT_STRING_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED | INTERACTIVE;
    option text = STRING_TOKEN(STR_PDC_ENABLED_USB2_DBC_STRING), value = 5, flags = RESET_REQUIRED | INTERACTIVE;
    option text = STRING_TOKEN(STR_PDC_ENABLED_DCI_OOB_STRING), value = 2, flags = RESET_REQUIRED | INTERACTIVE;
    option text = STRING_TOKEN(STR_PDC_ENABLED_2_WIRE_DCI_OOB_STRING), value = 6, flags = RESET_REQUIRED | INTERACTIVE;
    option text = STRING_TOKEN(STR_PDC_ENABLED_USB3_DBC_STRING), value = 3, flags = RESET_REQUIRED | INTERACTIVE;
    option text = STRING_TOKEN(STR_PDC_ENABLED_XDP3_STRING), value = 4, flags = RESET_REQUIRED | INTERACTIVE;
    option text = STRING_TOKEN(STR_PDC_MANUAL_STRING), value = 7, flags = RESET_REQUIRED | INTERACTIVE;
  endoneof;

  goto ADVANCED_DEBUG_FORM_ID,
       prompt = STRING_TOKEN(STR_ADVANCED_DEBUG_FORM),
       help = STRING_TOKEN(STR_ADVANCED_DEBUG_FORM_HELP);
endform;

form formid   = AUTO_ID(ADVANCED_DEBUG_FORM_ID),
  title         = STRING_TOKEN(STR_ADVANCED_DEBUG_FORM);

  oneof varid  = PCH_SETUP.DciUsb3TypecUfpDbg,
    prompt   = STRING_TOKEN(STR_PCH_USB3_TC_UFP_DBG_PROMPT),
    help     = STRING_TOKEN(STR_PCH_USB3_TC_UFP_DBG_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_PCH_DEBUG_NO_CHANGE), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
  endoneof;

  grayoutif NOT ideqval SI_SETUP.PlatformDebugConsent == 7;
    suppressif ideqval SI_SETUP.PlatformDebugConsent == 0;
      oneof varid  = PCH_SETUP.DciEn,
        prompt   = STRING_TOKEN(STR_PCH_DCI_EN_PROMPT),
        help     = STRING_TOKEN(STR_PCH_DCI_EN_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
      endoneof;

      oneof varid  = PCH_SETUP.DciDbcMode,
        prompt   = STRING_TOKEN(STR_PCH_DCI_DBC_MODE_PROMPT),
        help     = STRING_TOKEN(STR_PCH_DCI_DBC_MODE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCH_DCI_DBC_MODE_USB2), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCH_DCI_DBC_MODE_USB3), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCH_DCI_DBC_MODE_BOTH), value = 3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PCH_DEBUG_NO_CHANGE), value = 4, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;
      oneof varid  = PCH_SETUP.DciModphyPg,
        prompt   = STRING_TOKEN(STR_PCH_DCI_MODPHY_PG_PROMPT),
        help     = STRING_TOKEN(STR_PCH_DCI_MODPHY_PG_PROMPT_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
      endoneof;
    endif; // supressif PlatformDebugConsent == 0

    oneof varid  = PCH_SETUP.PchTraceHubMode,
      prompt   = STRING_TOKEN(STR_PCH_TRACE_HUB_PROMPT),
      help     = STRING_TOKEN(STR_TRACE_HUB_MODE_HELP),
      option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_TRACE_HUB_TARGET_DEBUGGER), value = 1, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_TRACE_HUB_HOST_DEBUGGER), value = 2, flags = RESET_REQUIRED;
      endoneof;

    suppressif ideqval PCH_SETUP.PchTraceHubMode == 0;
      oneof varid  = PCH_SETUP.PchTraceHubMemReg0Size,
        prompt   = STRING_TOKEN(STR_PCH_TRACE_HUB_MEM_REGION_0_SIZE),
        help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_0_HELP),
        option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 5, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 6, flags = RESET_REQUIRED;
      endoneof;

      oneof varid  = PCH_SETUP.PchTraceHubMemReg1Size,
        prompt   = STRING_TOKEN(STR_PCH_TRACE_HUB_MEM_REGION_1_SIZE),
        help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_1_HELP),
        option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 5, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 6, flags = RESET_REQUIRED;
      endoneof;
    endif;
    oneof varid  = SA_SETUP.CpuTraceHubMode,
      prompt     = STRING_TOKEN (STR_CPU_TRACE_HUB_PROMPT),
      help       = STRING_TOKEN (STR_TRACE_HUB_MODE_HELP),
      option text = STRING_TOKEN (STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN (STR_TRACE_HUB_TARGET_DEBUGGER), value = 1, flags = RESET_REQUIRED;
      option text = STRING_TOKEN (STR_TRACE_HUB_HOST_DEBUGGER),  value = 2, flags = RESET_REQUIRED;
    endoneof;

    suppressif ideqval SA_SETUP.CpuTraceHubMode == 0;
      oneof varid  = SA_SETUP.CpuTraceHubMemReg0Size,
        prompt     = STRING_TOKEN (STR_CPU_TRACE_HUB_MEM_REGION_0_SIZE),
        help       = STRING_TOKEN (STR_TRACE_HUB_MEM_REGION_0_HELP),
        option text = STRING_TOKEN (STR_TRACE_HUB_NONE),  value = 0x0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_TRACE_HUB_1MB),   value = 0x1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_TRACE_HUB_8MB),   value = 0x2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text = STRING_TOKEN (STR_TRACE_HUB_64MB),  value = 0x3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_TRACE_HUB_128MB), value = 0x4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_TRACE_HUB_256MB), value = 0x5, flags = RESET_REQUIRED;
        option text = STRING_TOKEN (STR_TRACE_HUB_512MB), value = 0x6, flags = RESET_REQUIRED;
      endoneof;

      suppressif ideqval CPU_SETUP.DebugCpuDisabled == 1;
        oneof varid  = SA_SETUP.CpuTraceHubMemReg1Size,
          prompt     = STRING_TOKEN (STR_CPU_TRACE_HUB_MEM_REGION_1_SIZE),
          help       = STRING_TOKEN (STR_TRACE_HUB_MEM_REGION_1_HELP),
          option text = STRING_TOKEN (STR_TRACE_HUB_NONE),  value = 0x0, flags = RESET_REQUIRED;
          option text = STRING_TOKEN (STR_TRACE_HUB_1MB),   value = 0x1, flags = RESET_REQUIRED;
          option text = STRING_TOKEN (STR_TRACE_HUB_8MB),   value = 0x2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
          option text = STRING_TOKEN (STR_TRACE_HUB_64MB),  value = 0x3, flags = RESET_REQUIRED;
          option text = STRING_TOKEN (STR_TRACE_HUB_128MB), value = 0x4, flags = RESET_REQUIRED;
          option text = STRING_TOKEN (STR_TRACE_HUB_256MB), value = 0x5, flags = RESET_REQUIRED;
          option text = STRING_TOKEN (STR_TRACE_HUB_512MB), value = 0x6, flags = RESET_REQUIRED;
        endoneof;
      endif;
    endif;
  endif; // grayoutif NOT ideqval SI_SETUP.PlatformDebugConsent == 7;

  suppressif  ideqval SETUP_CPU_FEATURES.DebugInterfaceSupported == 0;
    oneof varid   = CPU_SETUP.DebugInterfaceEnable,
      prompt      = STRING_TOKEN(STR_DEBUG_MSR_INTERFACE_PROMPT),
      help        = STRING_TOKEN(STR_DEBUG_MSR_INTERFACE_PROMPT_HELP),
      option text = STRING_TOKEN(STR_DISABLED_STRING),  value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLED_STRING),  value = 1, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_CPU_DEBUG_NO_CHANGE), value = 2, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;
    suppressif  ideqval CPU_SETUP.DebugInterfaceEnable == 2;
      oneof varid   = CPU_SETUP.DebugInterfaceLockEnable,
        prompt      = STRING_TOKEN(STR_DEBUG_MSR_INTERFACE_LOCK_PROMPT),
        help        = STRING_TOKEN(STR_DEBUG_MSR_INTERFACE_LOCK_PROMPT_HELP),
        option text = STRING_TOKEN(STR_DISABLED),  value = 0, flags =  RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;
    endif;
  endif; // supressif DebugInterfaceSupported == 0

  oneof varid = PCH_SETUP.PchEnableDbcObs,
    prompt   = STRING_TOKEN(STR_PCH_USB_OC_OVERRIDE_FOR_DBC),
    help     = STRING_TOKEN(STR_PCH_USB_OC_OVERRIDE_FOR_DBC_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
  endoneof;

  suppressif  ideqval SETUP_CPU_FEATURES.ProcTraceSupported == 0;
    oneof varid   = CPU_SETUP.ProcessorTraceMemSize,
      prompt      = STRING_TOKEN(STR_PROC_TRACE_MEM_SIZE_PROMPT),
      help        = STRING_TOKEN(STR_PROC_TRACE_MEM_SIZE_HELP),
      option text = STRING_TOKEN(STR_DISABLED), value = 0xFF, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_4KB), value = 0, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_8KB), value = 1, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_16KB), value = 2, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_32KB), value = 3, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_64KB), value = 4, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_128KB), value = 5, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_256KB), value = 6, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_512KB), value = 7, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_1MB), value = 8, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_2MB), value = 9, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_4MB), value = 10, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_8MB), value = 11, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_16MB), value = 12, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_32MB), value = 13, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_64MB), value = 14, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_128MB), value = 15, flags = RESET_REQUIRED;
    endoneof;
  endif;

  suppressif  ideqval SETUP_CPU_FEATURES.ProcTraceSupported == 0
           OR ideqval CPU_SETUP.ProcessorTraceMemSize == 0xFF;
    oneof varid   = CPU_SETUP.ProcessorTraceEnable,
      prompt      = STRING_TOKEN(STR_PROC_TRACE_ENABLE_PROMPT),
      help        = STRING_TOKEN(STR_PROC_TRACE_ENABLE_HELP),
      option text = STRING_TOKEN(STR_DISABLED_STRING),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLED_STRING),  value = 1, flags =  RESET_REQUIRED;
    endoneof;

    oneof varid   = CPU_SETUP.ProcessorTraceOutputScheme,
      prompt      = STRING_TOKEN(STR_PROC_TRACE_OUTPUT_SCHEME_PROMPT),
      help        = STRING_TOKEN(STR_PROC_TRACE_OUTPUT_SCHEME_HELP),
      option text = STRING_TOKEN(STR_SINGLE_RANGE_OUTPUT),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_TOPA_OUTPUT),  value = 1, flags =  RESET_REQUIRED;
    endoneof;

    oneof varid   = CPU_SMM.CpuSmmProcTraceEnable,
      prompt      = STRING_TOKEN (STR_SMM_PROC_TRACE_ENABLE_PROMPT),
      help        = STRING_TOKEN (STR_SMM_PROC_TRACE_ENABLE_HELP),
      option text = STRING_TOKEN (STR_DISABLED),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN (STR_ENABLED),   value = 1, flags = RESET_REQUIRED;
    endoneof;
  endif;

//
// Note: For JtagC10PowerGateDisable setup option, Disable:1 and Enable:0
//
  oneof varid   = CPU_SETUP.JtagC10PowerGateDisable,
    prompt      = STRING_TOKEN(STR_JTAG_C10_POWER_GATE),
    help        = STRING_TOKEN(STR_JTAG_C10_POWER_GATE_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 1, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
  endoneof;

//
// Note: For ThreeStrikeCounterDisable setup option, Disable:1 and Enable:0
//
  oneof varid     = CPU_SETUP.ThreeStrikeCounterDisable,
      prompt      = STRING_TOKEN(STR_THREE_STRIKE_PROMPT),
      help        = STRING_TOKEN(STR_THREE_STRIKE_PROMPT_HELP),
      option text = STRING_TOKEN(STR_DISABLED),  value = 1, flags =  RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLED),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
  endoneof;

  oneof varid  = SETUP_DATA.EnableCrashLog,
    prompt      = STRING_TOKEN(STR_CRASH_LOG_PROMPT),
    help        = STRING_TOKEN(STR_CRASH_LOG_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
  endoneof;

  suppressif  ideqval SETUP_DATA.EnableCrashLog == 0;
    oneof varid  = SETUP_DATA.CrashLogOnAllReset,
      prompt      = STRING_TOKEN(STR_COLLECT_CRASH_LOG_ON_ALL_RESET_PROMPT),
      help        = STRING_TOKEN(STR_COLLECT_CRASH_LOG_ON_ALL_RESET_HELP),
      option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
    endoneof;
  endif;

  oneof varid  = SA_SETUP.PramSize,
    prompt      = STRING_TOKEN(STR_PRAM_PROMPT),
    help        = STRING_TOKEN(STR_PRAM_HELP),
    option text = STRING_TOKEN(STR_DISABLE),    value = 0x30, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    option text = STRING_TOKEN(STR_PRAM_4MB),   value = 0x31, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_PRAM_16MB),  value = 0x32, flags = RESET_REQUIRED;
    option text = STRING_TOKEN(STR_PRAM_64MB),  value = 0x33, flags = RESET_REQUIRED;
  endoneof;

  oneof varid  = PCH_SETUP.PmcDbgMsgEn,
    prompt      = STRING_TOKEN(STR_PMC_DEBUG_MESSAGE_ENABLE_PROMPT),
    help        = STRING_TOKEN(STR_PMC_DEBUG_MESSAGE_ENABLE_HELP),
    option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
  endoneof;

  grayoutif TRUE;
    oneof varid = ME_SETUP_STORAGE.DelayedAuthenticationMode,
      prompt    = STRING_TOKEN(STR_DELAYED_AUTHENTICATION_MODE_PROMPT),
      help      = STRING_TOKEN(STR_DELAYED_AUTHENTICATION_MODE_HELP),
      option text = STRING_TOKEN(STR_DISABLED),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = RESET_REQUIRED;
    endoneof;
  endif; // grayoutif

endform; //End of ADVANCED_DEBUG_FORM_ID
